{"version":3,"sources":["images/baristaespresso.jpg","images/baristacaffecrema.jpg","images/privatkaffeeafricanblue.jpg","images/espressomilanostyle.jpg","images/espressosiciliastyle.jpg","components/CartSum/CartSum.js","components/ShoppingCart/ShoppingCart.js","store/actionTypes.js","components/AdressForm/AdressForm.js","components/DeliveryPayment/DeliveryPayment.js","App.js","store/reducers/shoppingCartReducer.js","store/reducers/adressFormReducer.js","store/reducers/deliveryPaymentReducer.js","index.js"],"names":["module","exports","Text","Typography","CartSum","props","className","cartTotal","Column","Table","ShoppingCart","handleAddProduct","cart","length","addProduct","handleCartTotal","handleWarning","handleChangeAmount","record","value","changeAmount","handleDeleteRow","deleteRow","message","warning","renderEmpty","pagination","dataSource","this","title","dataIndex","key","render","picture","alt","src","text","size","min","max","defaultValue","amount","onChange","onClick","CloseOutlined","xs","md","handleReset","Component","connect","state","products","shoppingCartReducer","dispatch","type","payload","InputGroup","Input","Group","AdressForm","formRef","React","createRef","onSubmit","current","submit","setFieldsValue","values","addressForm","initialValues","name","onFinish","ref","sx","Item","rules","required","placeholder","pattern","RegExp","addonBefore","gutter","span","checked","invoiceNeeded","handleCheckbox","adressFormReducer","e","event","DeliveryPayment","cost","target","window","easyPack","mapWidget","point","setValues","handleOrderTotal","handleDeliveryCost","getPoint","selectedPoint","setPoint","setState","easyPackAsyncInit","init","points","types","functions","map","initialTypes","deliveryValue","paczkomat","id","paymentValue","orderTotal","deliveryPaymentReducer","Step","Steps","App","visible","steps","content","child","showModal","handleOk","handleBack","location","reload","handleCancel","validateFields","then","catch","errorInfo","error","item","next","prev","onOk","onCancel","footer","ReloadOutlined","SmileOutlined","initialState","price","totalPrice","picture1","picture2","picture3","picture4","picture5","reducer","action","index","Math","floor","random","product","concat","filter","p","forEach","toFixed","total","i","removedProduct","find","lastName","email","phone","adress","city","zip","companyname","NIP","companyEmail","companyPhone","companyAdress","companyCity","companyZip","prices","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a392e1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baristaespresso.ed3a6ee1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/baristacaffecrema.7c8ebf47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/privatkaffeeafricanblue.a89be64d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/espressomilanostyle.92de93fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/espressosiciliastyle.6988f578.jpg\";","import React from \"react\";\r\nimport { Typography } from 'antd';\r\nimport \"./CartSum.css\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst CartSum = props => {\r\n  return (\r\n    <div className=\"total-cart-container\">\r\n      <Text className=\"custom-title\">Wartość koszyka: <span className=\"price-style\">{props.cartTotal}</span> zł</Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartSum;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ShoppingCart.css\";\r\nimport CartSum from \"../CartSum/CartSum\";\r\nimport { Row, Col, Table, Button, InputNumber, message } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\nimport * as actionTypes from \"./../../store/actionTypes\";\r\n\r\nconst { Column } = Table;\r\n\r\nclass ShoppingCart extends Component {\r\n  handleAddProduct = () => {\r\n    if (this.props.cart.length < 5) {\r\n      this.props.addProduct();\r\n      this.props.handleCartTotal();\r\n    } else this.handleWarning();\r\n  };\r\n\r\n  handleChangeAmount = (record, value) => {\r\n    if (value >= 1 && value <= 10) {\r\n      this.props.changeAmount(record, value);\r\n      this.props.handleCartTotal();\r\n    }\r\n  };\r\n\r\n  handleDeleteRow = record => {\r\n    this.props.deleteRow(record);\r\n    this.props.handleCartTotal();\r\n  };\r\n\r\n  handleWarning = () => {\r\n    message.warning(\"Uuups! Nie mamy więcej produktów!\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <div className=\"products-list\">\r\n            <Table\r\n              renderEmpty={false}\r\n              pagination={false}\r\n              dataSource={this.props.cart}\r\n            >\r\n              <Column\r\n                className=\"picture-column\"\r\n                title=\"\"\r\n                dataIndex=\"picture\"\r\n                key=\"picture\"\r\n                render={picture => <img alt=\"kawa\" src={picture} />}\r\n              />\r\n              <Column title=\"Produkt\" dataIndex=\"name\" key=\"product\" />\r\n              <Column\r\n                title=\"Ilość\"\r\n                dataIndex=\"amount\"\r\n                key=\"amount\"\r\n                render={(text, record) => (\r\n                  <InputNumber\r\n                    size=\"small\"\r\n                    min={1}\r\n                    max={10}\r\n                    defaultValue={record.amount}\r\n                    onChange={value => this.handleChangeAmount(record, value)}\r\n                  />\r\n                )}\r\n              />\r\n              <Column\r\n                className=\"total-price\"\r\n                title=\"Suma\"\r\n                dataIndex=\"totalPrice\"\r\n                key=\"price\"\r\n              />\r\n              <Column\r\n                className=\"delete-column\"\r\n                title=\"\"\r\n                key=\"delete\"\r\n                render={record => (\r\n                  <Button\r\n                    className={\"delete-row-button\"}\r\n                    onClick={() => this.handleDeleteRow(record)}\r\n                  >\r\n                    <CloseOutlined />\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"buttons-row\">\r\n          <Col xs={24} md={16}>\r\n            <div className=\"handle-products-buttons\">\r\n              <Button className=\"add-product\" onClick={this.handleAddProduct}>\r\n                Dodaj produkt\r\n              </Button>\r\n              <Button\r\n                className=\"reset-products\"\r\n                onClick={this.props.handleReset}\r\n              >\r\n                Zresetuj koszyk\r\n              </Button>\r\n              {/* <Button\r\n                className=\"add-product\"\r\n                onClick={this.props.handleCartTotal}\r\n              >\r\n                Przelicz wszystko <ReloadOutlined />\r\n              </Button> */}\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} md={8}>\r\n            <CartSum cartTotal={this.props.cartTotal} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.shoppingCartReducer.products,\r\n    cart: state.shoppingCartReducer.cart,\r\n    cartTotal: state.shoppingCartReducer.cartTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProduct: () => dispatch({ type: actionTypes.ADD_PRODUCT }),\r\n    changeAmount: (record, value) =>\r\n      dispatch({\r\n        type: actionTypes.CHANGE_AMOUNT_PRODUCT,\r\n        payload: { record: record, value: value }\r\n      }),\r\n    handleCartTotal: () => dispatch({ type: actionTypes.CART_TOTAL }),\r\n    deleteRow: record =>\r\n      dispatch({ type: actionTypes.REMOVE_PRODUCT, record: record }),\r\n    handleReset: () => dispatch({ type: actionTypes.CART_RESET })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);\r\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const CHANGE_AMOUNT_PRODUCT = \"CHANGE_AMOUNT_PRODUCT\";\r\nexport const CART_TOTAL = \"CART_TOTAL\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n\r\nexport const FORM_CHECKBOX = \"FORM_CHECKBOX\";\r\nexport const ON_SUBMIT_FORM = \"ON_SUBMIT_FORM\";\r\nexport const ADD_FORM_VALUES = \"ADD_FORM_VALUES\";\r\n\r\nexport const SET_DELIVERY_PAYMENT_VALUES = \"SET_DELIVERY_PAYMENT_VALUES\";\r\nexport const SET_POINT = \"SET_POINT\";\r\nexport const ORDER_TOTAL = \"ORDER_TOTAL\";\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Checkbox } from \"antd\";\r\nimport \"./AdressForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"./../../store/actionTypes\";\r\n\r\nconst InputGroup = Input.Group;\r\n\r\nclass AdressForm extends Component {\r\n  formRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.formRef.current.setFieldsValue(this.props.values);\r\n    const { addressForm } = this.props;\r\n    addressForm(this);\r\n  }\r\n\r\n  onSubmit = () => {\r\n      this.formRef.current.submit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form\r\n          initialValues={this.props.values}\r\n          name=\"adressForm\"\r\n          onFinish={this.props.onFinish}\r\n          ref={this.formRef}\r\n        >\r\n          <Row>\r\n            <Col sx={24} md={12} className=\"custom-col\">\r\n              <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Imię jest wymagane.\"\r\n                  },\r\n                  {\r\n                    type: \"string\",\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Imię\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"lastName\"\r\n                rules={[\r\n                  { required: true, message: \"Nazwisko jest wymagane.\" },\r\n                  {\r\n                    type: \"string\",\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nazwisko\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  { required: true, message: \"E-mail jest wymagany.\" },\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"Niepoprawny format e-mail!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"E-mail\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"phone\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Numer telefonu jest wymagany.\"\r\n                  },\r\n                  {\r\n                    type: \"regexp\",\r\n                    pattern: new RegExp(/^[0-8]{8,12}$/g),\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  addonBefore=\"+48\"\r\n                  placeholder=\"Numer telefonu\"\r\n                  type=\"number\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"adress\"\r\n                rules={[{ required: true, message: \"Adres jest wymagany.\" }]}\r\n              >\r\n                <Input placeholder=\"Adres\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <InputGroup>\r\n                  <Row gutter={2} className=\"input-group-row\">\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"city\"\r\n                        rules={[\r\n                          { required: true, message: \"Miasto jest wymagane.\" }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Miasto\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"zip\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Kod pocztowy jest wymagane.\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Kod pocztowy\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </InputGroup>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  type=\"checkbox\"\r\n                  name=\"invoiceNeeded\"\r\n                  checked={this.props.invoiceNeeded}\r\n                  onChange={this.props.handleCheckbox}\r\n                >\r\n                  Czy potrzebujesz faktury na firmę?\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col\r\n              sx={24}\r\n              md={12}\r\n              className={\r\n                this.props.invoiceNeeded ? \"visible custom-col\" : \"hidden\"\r\n              }\r\n            >\r\n              <Form.Item\r\n                name=\"companyName\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"Nazwa firmy jest wymagana.\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nazwa firmy\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"NIP\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"NIP jest wymagane.\"\r\n                  },\r\n                  {\r\n                    type: \"regexp\",\r\n                    pattern: new RegExp(/^[0-9]{10}$/g),\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"NIP\" type=\"number\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"companyEmail\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"E-mail jest wymagany.\"\r\n                  },\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"Niepoprawny format e-mail!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"E-mail\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"companyPhone\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"Numer telefonu jest wymagany.\"\r\n                  },\r\n                  {\r\n                    type: \"regexp\",\r\n                    pattern: new RegExp(/^[0-8]{8,12}$/g),\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input addonBefore=\"+48\" placeholder=\"Numer telefonu\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"companyAdress\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"Adres jest wymagany.\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Adres Firmy\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <InputGroup>\r\n                  <Row gutter={2} className=\"input-group-row\">\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"companyCity\"\r\n                        rules={[\r\n                          {\r\n                            required: this.props.invoiceNeeded,\r\n                            message: \"Miasto jest wymagane.\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Miasto\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"companyZip\"\r\n                        rules={[\r\n                          {\r\n                            required: this.props.invoiceNeeded,\r\n                            message: \"Kod pocztowy jest wymagany.\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Kod pocztowy\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </InputGroup>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = state => {\r\n  return {\r\n    invoiceNeeded: state.adressFormReducer.invoiceNeeded,\r\n    values: state.adressFormReducer.values\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleCheckbox: e =>\r\n      dispatch({ type: actionTypes.FORM_CHECKBOX, event: e }),\r\n    onFinish: values =>\r\n      dispatch({\r\n        type: actionTypes.ADD_FORM_VALUES,\r\n        values: values\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdressForm);\r\n\r\n// onFinish = values => {\r\n//   console.log(values);\r\n//   this.setState({\r\n//     values: values\r\n//   });\r\n// };\r\n\r\n// handleCheckbox = e => {\r\n//   const checked = e.target.checked;\r\n//   this.setState({\r\n//     invoiceNeeded: checked\r\n//   });\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Radio, Typography, Divider } from \"antd\";\r\nimport \"./DeliveryPayment.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"./../../store/actionTypes\";\r\n\r\nconst { Text } = Typography;\r\n\r\nclass DeliveryPayment extends Component {\r\n  state = {\r\n    cost: \"14.99 zł\"\r\n  };\r\n\r\n  onChange = e => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    if (target.value === 2) {\r\n      window.easyPack.mapWidget(\"easypack-map\", function(point) {\r\n        window.point = point;\r\n      });\r\n    }\r\n\r\n    this.props.setValues(name, value);\r\n    this.props.handleOrderTotal(this.props.cartTotal);\r\n    this.handleDeliveryCost(e);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.handleOrderTotal(this.props.cartTotal);\r\n\r\n    window.easyPackAsyncInit = function() {\r\n      window.easyPack.init({\r\n        points: {\r\n          types: [\"parcel_locker\"],\r\n          functions: [\"parcel_collect\"]\r\n        },\r\n        map: {\r\n          initialTypes: [\"parcel_locker\"]\r\n        }\r\n      });\r\n    };\r\n\r\n    if (this.props.deliveryValue === 2) {\r\n      window.easyPack.mapWidget(\"easypack-map\", function(point) {\r\n        window.point = point;\r\n      });\r\n    }\r\n  }\r\n\r\n  getPoint = point => {\r\n    if (window.point) {\r\n      const selectedPoint = window.point;\r\n      return this.props.setPoint(selectedPoint);\r\n    }\r\n  };\r\n\r\n  handleDeliveryCost = e => {\r\n    let cost = this.state.cost;\r\n    if (e.target.value === 0) {\r\n      cost = \"14.99 zł\";\r\n    } else if (e.target.value === 1) {\r\n      cost = \"9.99 zł\";\r\n    } else {\r\n      cost = \"8.99 zł\";\r\n    }\r\n    this.setState({\r\n      cost: cost\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"custom-row\">\r\n        <Col className=\"delivery-col\" xs={24} md={12}>\r\n          <Text className=\"custom-title\">Opcje dostawy:</Text>\r\n          <Radio.Group\r\n            name=\"deliveryValue\"\r\n            onChange={this.onChange}\r\n            value={this.props.deliveryValue}\r\n          >\r\n            <Radio className=\"custom-radio\" value={0}>\r\n              Kurier AtYourDoor <span className=\"price-style\">14.99 zł</span>\r\n            </Radio>\r\n            <Radio className=\"custom-radio\" value={1}>\r\n              Poczta Polska <span className=\"price-style\">9.99 zł</span>\r\n            </Radio>\r\n            <Radio className=\"custom-radio\" value={2}>\r\n              Paczkomaty <span className=\"price-style\">8.99 zł</span>\r\n            </Radio>\r\n          </Radio.Group>\r\n          {this.props.paczkomat && this.props.deliveryValue === 2 ? (\r\n            <div className=\"center-div\">\r\n              <Text className=\"custom-text\">\r\n                Wybrałeś paczkomat:{\" \"}\r\n                <span className=\"point\">{this.props.paczkomat}</span>\r\n              </Text>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"paczkomaty-map\" onClick={this.getPoint}>\r\n            {this.props.deliveryValue === 2 ? (\r\n              <div id=\"easypack-map\"></div>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n        <Col className=\"payment-col\" xs={24} md={12}>\r\n          <Text className=\"custom-title\">Opcje płatności:</Text>\r\n          <Radio.Group\r\n            name=\"paymentValue\"\r\n            onChange={this.onChange}\r\n            value={this.props.paymentValue}\r\n          >\r\n            <Radio className=\"custom-radio\" value={3}>\r\n              Płatność za pobraniem <span className=\"price-style\">9.99 zł</span>\r\n            </Radio>\r\n            <Radio className=\"custom-radio\" value={4}>\r\n              Płatność przelewem <span className=\"price-style\">0.00 zł</span>\r\n            </Radio>\r\n          </Radio.Group>\r\n          <div className=\"summary-div\">\r\n            <p>\r\n              Wartość koszyka: <strong>{this.props.cartTotal} zł</strong>\r\n            </p>\r\n            <p>\r\n              Koszt dostawy: <strong>{this.state.cost}</strong>\r\n            </p>\r\n            <p>\r\n              Koszt płatności:{\" \"}\r\n              <strong>\r\n                {this.props.paymentValue === 3 ? \"9.99 zł\" : \"0.00 zł\"}\r\n              </strong>\r\n            </p>\r\n            <Divider />\r\n            <Text className=\"custom-title total\">\r\n              Razem do zapłaty: <br />\r\n              <span className=\"price-style\">{this.props.orderTotal} zł</span>\r\n            </Text>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = state => {\r\n  return {\r\n    deliveryValue: state.deliveryPaymentReducer.deliveryValue,\r\n    paymentValue: state.deliveryPaymentReducer.paymentValue,\r\n    paczkomat: state.deliveryPaymentReducer.paczkomat,\r\n    cartTotal: state.shoppingCartReducer.cartTotal,\r\n    orderTotal: state.deliveryPaymentReducer.orderTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setValues: (name, value) =>\r\n      dispatch({\r\n        type: actionTypes.SET_DELIVERY_PAYMENT_VALUES,\r\n        payload: { name: name, value: value }\r\n      }),\r\n    setPoint: selectedPoint =>\r\n      dispatch({\r\n        type: actionTypes.SET_POINT,\r\n        selectedPoint: selectedPoint\r\n      }),\r\n    handleOrderTotal: cartTotal =>\r\n      dispatch({ type: actionTypes.ORDER_TOTAL, cartTotal: cartTotal })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliveryPayment);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"./store/actionTypes\";\r\nimport \"./App.css\";\r\nimport ShoppingCart from \"./components/ShoppingCart/ShoppingCart\";\r\nimport AdressForm from \"./components/AdressForm/AdressForm\";\r\nimport DeliveryPayment from \"./components/DeliveryPayment/DeliveryPayment\";\r\nimport { Steps, Button, Modal, message } from \"antd\";\r\nimport { ReloadOutlined, SmileOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Step } = Steps;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    current: 0,\r\n    visible: false\r\n  };\r\n\r\n  steps = [\r\n    {\r\n      title: \"Koszyk\",\r\n      content: <ShoppingCart />\r\n    },\r\n    {\r\n      title: \"Twoje dane\",\r\n      content: <AdressForm addressForm={ref => (this.child = ref)} />\r\n    },\r\n    {\r\n      title: \"Dostawa i płatność\",\r\n      content: <DeliveryPayment />\r\n    }\r\n  ];\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  handleOk = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n  handleBack = () => {\r\n    this.setState({ current: 0, visible: false });\r\n    window.location.reload(false);\r\n  };\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  next() {\r\n    if (this.state.current === 0) {\r\n      if (!this.props.cart.length) {\r\n        return message.warning(\"Dodaj produkt!\");\r\n      } else {\r\n        this.props.handleCartTotal();\r\n        const current = this.state.current + 1;\r\n        this.setState({ current });\r\n      }\r\n    } else if (this.state.current === 1) {\r\n      this.child.formRef.current\r\n        .validateFields()\r\n        .then(values => {\r\n          this.props.onFinish(values);\r\n          const current = this.state.current + 1;\r\n          this.setState({ current });\r\n        })\r\n        .catch(errorInfo => {\r\n          return message.error(\"Wypełnij formularz!\");\r\n        });\r\n    } else {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n  }\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  render() {\r\n    const current = this.state.current;\r\n    return (\r\n      <div className=\"form-container\">\r\n        <Steps className=\"ant-steps-label-vertical\" current={current}>\r\n          {this.steps.map(item => (\r\n            <Step key={item.title} title={item.title} />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content\">{this.steps[current].content}</div>\r\n        <div className=\"steps-action\">\r\n          {current < this.steps.length - 1 && (\r\n            <Button\r\n              className=\"next-button\"\r\n              // disabled={!this.props.cart.length}\r\n              onClick={() => this.next()}\r\n            >\r\n              Dalej\r\n            </Button>\r\n          )}\r\n          {current === this.steps.length - 1 && (\r\n            <Button className=\"next-button\" onClick={this.showModal}>\r\n              Zamów i zapłać!\r\n            </Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button className=\"previous-button\" onClick={() => this.prev()}>\r\n              Powrót\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <Modal\r\n          visible={this.state.visible}\r\n          title=\"Dziękujemy za zakupy!\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              className=\"previous-button\"\r\n              onClick={this.handleBack}\r\n            >\r\n              Jeszcze raz! <ReloadOutlined />\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              className=\"previous-button\"\r\n              onClick={this.handleOk}\r\n            >\r\n              Ok!\r\n            </Button>\r\n          ]}\r\n        >\r\n          <p>\r\n            Nie martw się! Kawa zaraz dotrze! <SmileOutlined />\r\n          </p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cart: state.shoppingCartReducer.cart,\r\n    cartTotal: state.shoppingCartReducer.cartTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleCartTotal: () => dispatch({ type: actionTypes.CART_TOTAL }),\r\n    onFinish: values =>\r\n      dispatch({\r\n        type: actionTypes.ADD_FORM_VALUES,\r\n        values: values\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import * as actionTypes from \"./../actionTypes\";\r\nimport picture1 from \"../../images/baristaespresso.jpg\";\r\nimport picture2 from \"../../images/baristacaffecrema.jpg\";\r\nimport picture3 from \"../../images/privatkaffeeafricanblue.jpg\";\r\nimport picture4 from \"../../images/espressomilanostyle.jpg\";\r\nimport picture5 from \"../../images/espressosiciliastyle.jpg\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n  cartTotal: \"0.00\",\r\n  products: [\r\n    {\r\n      key: 0,\r\n      name: \"Barista Espresso 0,5kg\",\r\n      amount: 1,\r\n      price: 38.99,\r\n      totalPrice: 38.99,\r\n      picture: picture1\r\n    },\r\n    {\r\n      key: 1,\r\n      name: \"Barista Caffe Crema 0,5kg\",\r\n      amount: 1,\r\n      price: 40.99,\r\n      totalPrice: 40.99,\r\n      picture: picture2\r\n    },\r\n    {\r\n      key: 2,\r\n      name: \"Privat Kaffe African Blue 0,5kg\",\r\n      amount: 1,\r\n      price: 44.99,\r\n      totalPrice: 44.99,\r\n      picture: picture3\r\n    },\r\n    {\r\n      key: 3,\r\n      name: \"Espresso Milano Style 0,5kg\",\r\n      amount: 1,\r\n      price: 39.99,\r\n      totalPrice: 39.99,\r\n      picture: picture4\r\n    },\r\n    {\r\n      key: 4,\r\n      name: \"Espresso Sicilia Style 0,5kg\",\r\n      amount: 1,\r\n      price: 41.99,\r\n      totalPrice: 41.99,\r\n      picture: picture5\r\n    }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PRODUCT:\r\n      const index = Math.floor(Math.random() * state.products.length);\r\n      const product = state.products[index];\r\n      return {\r\n        ...state,\r\n        cart: state.cart.concat(product),\r\n        products: state.products.filter(p => p.key !== product.key)\r\n      };\r\n\r\n    case actionTypes.CHANGE_AMOUNT_PRODUCT:\r\n      const cart = [...state.cart];\r\n      cart.forEach(product => {\r\n        if (product.key === action.payload.record.key) {\r\n          product.amount = action.payload.value;\r\n          product.totalPrice = (product.amount * product.price).toFixed(2);\r\n          product.totalPrice = (product.totalPrice * 1);\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        cart: cart\r\n      };\r\n\r\n    case actionTypes.CART_TOTAL:\r\n      let total = 0;\r\n      for (let i = 0; i < state.cart.length; i++) {\r\n        total += state.cart[i].totalPrice;\r\n      }\r\n      total = total.toFixed(2);\r\n      return {\r\n        ...state,\r\n        cartTotal: total\r\n      };\r\n\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      const removedProduct = state.cart.find(\r\n        product => product.key === action.record.key\r\n      );\r\n      removedProduct.amount = 1;\r\n      removedProduct.totalPrice = removedProduct.price;\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(product => product.key !== removedProduct.key),\r\n        products: state.products.concat(removedProduct)\r\n      };\r\n\r\n    case actionTypes.CART_RESET:\r\n      return {\r\n        cart: [],\r\n        cartTotal: \"0.00\",\r\n        products: [\r\n          {\r\n            key: 0,\r\n            name: \"Barista Espresso 0,5kg\",\r\n            amount: 1,\r\n            price: 38.99,\r\n            totalPrice: 38.99,\r\n            picture: picture1\r\n          },\r\n          {\r\n            key: 1,\r\n            name: \"Barista Caffe Crema 0,5kg\",\r\n            amount: 1,\r\n            price: 40.99,\r\n            totalPrice: 40.99,\r\n            picture: picture2\r\n          },\r\n          {\r\n            key: 2,\r\n            name: \"Privat Kaffe African Blue 0,5kg\",\r\n            amount: 1,\r\n            price: 44.99,\r\n            totalPrice: 44.99,\r\n            picture: picture3\r\n          },\r\n          {\r\n            key: 3,\r\n            name: \"Espresso Milano Style 0,5kg\",\r\n            amount: 1,\r\n            price: 39.99,\r\n            totalPrice: 39.99,\r\n            picture: picture4\r\n          },\r\n          {\r\n            key: 4,\r\n            name: \"Espresso Sicilia Style 0,5kg\",\r\n            amount: 1,\r\n            price: 41.99,\r\n            totalPrice: 41.99,\r\n            picture: picture5\r\n          }\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./../actionTypes\";\r\n\r\nconst initialState = {\r\n  values: [\r\n    { name: \"\" },\r\n    { lastName: \"\" },\r\n    { email: \"\" },\r\n    { phone: 0 },\r\n    { adress: \"\" },\r\n    { city: \"\" },\r\n    { zip: \"\" },\r\n\r\n    { companyname: \"\" },\r\n    { NIP: \"\" },\r\n    { companyEmail: \"\" },\r\n    { companyPhone: 0 },\r\n    { companyAdress: \"\" },\r\n    { companyCity: \"\" },\r\n    { companyZip: \"\" }\r\n  ],\r\n  invoiceNeeded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FORM_CHECKBOX:\r\n      return {\r\n        ...state,\r\n        invoiceNeeded: action.event.target.checked\r\n      };\r\n    case actionTypes.ADD_FORM_VALUES:\r\n      return {\r\n        ...state,\r\n        values: action.values\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./../actionTypes\";\r\n\r\nconst initialState = {\r\n  deliveryValue: 0,\r\n  paymentValue: 3,\r\n  orderTotal: 0,\r\n  paczkomat: \"\"\r\n};\r\n\r\nconst prices = [\r\n  { id: 0, price: 14.99 },\r\n  { id: 1, price: 9.99 },\r\n  { id: 2, price: 8.99 },\r\n  { id: 3, price: 9.99 },\r\n  { id: 4, price: 0 }\r\n];\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DELIVERY_PAYMENT_VALUES:\r\n      return {\r\n        ...state,\r\n        [action.payload.name]: action.payload.value\r\n      };\r\n\r\n    case actionTypes.SET_POINT:\r\n      return {\r\n        ...state,\r\n        paczkomat: action.selectedPoint.name\r\n      };\r\n\r\n    case actionTypes.ORDER_TOTAL:\r\n      const orderTotal =\r\n        action.cartTotal * 1 +\r\n        prices[state.deliveryValue].price +\r\n        prices[state.paymentValue].price;\r\n      return {\r\n        ...state,\r\n        orderTotal: orderTotal.toFixed(2)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport shoppingCartReducer from \"./store/reducers/shoppingCartReducer\";\r\nimport adressFormReducer from \"./store/reducers/adressFormReducer\";\r\nimport deliveryPaymentReducer from \"./store/reducers/deliveryPaymentReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  shoppingCartReducer: shoppingCartReducer,\r\n  adressFormReducer: adressFormReducer,\r\n  deliveryPaymentReducer: deliveryPaymentReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}