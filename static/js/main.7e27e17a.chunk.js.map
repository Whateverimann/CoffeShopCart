{"version":3,"sources":["images/baristaespresso.jpg","images/baristacaffecrema.jpg","images/privatkaffeeafricanblue.jpg","images/espressomilanostyle.jpg","images/espressosiciliastyle.jpg","components/CartSum/CartSum.js","components/ShoppingCart/ShoppingCart.js","store/actionTypes.js","components/AdressForm/AdressForm.js","components/DeliveryPayment/DeliveryPayment.js","App.js","store/reducers/shoppingCartReducer.js","store/reducers/adressFormReducer.js","store/reducers/deliveryPaymentReducer.js","index.js"],"names":["module","exports","Text","Typography","CartSum","props","className","cartTotal","Column","Table","ShoppingCart","handleAddProduct","cart","length","addProduct","handleCartTotal","handleWarning","message","warning","renderEmpty","pagination","dataSource","this","title","dataIndex","key","render","picture","alt","src","text","record","size","min","max","defaultValue","amount","onChange","value","changeAmount","onClick","deleteRow","CloseOutlined","xs","md","handleReset","ReloadOutlined","Component","connect","state","products","shoppingCartReducer","dispatch","type","payload","InputGroup","Input","Group","AdressForm","formRef","React","createRef","onSubmit","current","submit","setFieldsValue","values","addressForm","initialValues","name","onFinish","ref","sx","Item","rules","required","placeholder","pattern","RegExp","addonBefore","gutter","span","checked","invoiceNeeded","handleCheckbox","adressFormReducer","e","event","DeliveryPayment","cost","target","window","easyPack","mapWidget","point","setValues","handleOrderTotal","handleDeliveryCost","getPoint","selectedPoint","setPoint","setState","easyPackAsyncInit","init","points","types","functions","map","initialTypes","deliveryValue","paczkomat","id","paymentValue","orderTotal","deliveryPaymentReducer","Step","Steps","App","visible","steps","content","child","showModal","handleOk","handleBack","location","reload","handleCancel","validateFields","then","catch","errorInfo","error","item","next","prev","onOk","onCancel","footer","SmileOutlined","initialState","price","totalPrice","picture1","picture2","picture3","picture4","picture5","reducer","action","index","Math","floor","random","product","concat","filter","p","forEach","toFixed","total","i","removedProduct","find","lastName","email","phone","adress","city","zip","companyname","NIP","companyEmail","companyPhone","companyAdress","companyCity","companyZip","prices","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e27e17a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/baristaespresso.ed3a6ee1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/baristacaffecrema.7c8ebf47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/privatkaffeeafricanblue.a89be64d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/espressomilanostyle.92de93fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/espressosiciliastyle.6988f578.jpg\";","import React from \"react\";\r\nimport { Typography } from 'antd';\r\nimport \"./CartSum.css\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst CartSum = props => {\r\n  return (\r\n    <div className=\"total-cart-container\">\r\n      <Text className=\"custom-title\">Wartość koszyka: <span className=\"price-style\">{props.cartTotal}</span> zł</Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartSum;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./ShoppingCart.css\";\r\nimport CartSum from \"../CartSum/CartSum\";\r\nimport { Row, Col, Table, Button, InputNumber, message } from \"antd\";\r\nimport { ReloadOutlined, CloseOutlined } from \"@ant-design/icons\";\r\nimport * as actionTypes from \"./../../store/actionTypes\";\r\n\r\nconst { Column } = Table;\r\n\r\nclass ShoppingCart extends Component {\r\n\r\n  handleAddProduct = () => {\r\n    if (this.props.cart.length < 5) {\r\n      this.props.addProduct();\r\n      this.props.handleCartTotal();\r\n    } else this.handleWarning();\r\n  };\r\n\r\n  handleWarning = () => {\r\n    message.warning(\"Uuups! Nie mamy więcej produktów!\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <div className=\"products-list\">\r\n            <Table\r\n              renderEmpty={false}\r\n              pagination={false}\r\n              dataSource={this.props.cart}\r\n            >\r\n              <Column\r\n                className=\"picture-column\"\r\n                title=\"\"\r\n                dataIndex=\"picture\"\r\n                key=\"picture\"\r\n                render={picture => <img alt=\"kawa\" src={picture} />}\r\n              />\r\n              <Column title=\"Produkt\" dataIndex=\"name\" key=\"product\" />\r\n              <Column\r\n                title=\"Ilość\"\r\n                dataIndex=\"amount\"\r\n                key=\"amount\"\r\n                render={(text, record) => (\r\n                  <InputNumber\r\n                    size=\"small\"\r\n                    min={1}\r\n                    max={10}\r\n                    defaultValue={record.amount}\r\n                    onChange={value => this.props.changeAmount(record, value)}\r\n                  />\r\n                )}\r\n              />\r\n              <Column\r\n                className=\"total-price\"\r\n                title=\"Suma\"\r\n                dataIndex=\"totalPrice\"\r\n                key=\"price\"\r\n              />\r\n              <Column\r\n              className=\"delete-column\"\r\n                title=\"\"\r\n                key=\"delete\"\r\n                render={record => (\r\n                  <Button\r\n                    className={\"delete-row-button\"}\r\n                    onClick={() => this.props.deleteRow(record)}\r\n                  >\r\n                    <CloseOutlined />\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Table>\r\n          </div>\r\n        </Row>\r\n        <Row className=\"buttons-row\">\r\n          <Col xs={24} md={16}>\r\n            <div className=\"handle-products-buttons\">\r\n              <Button className=\"add-product\" onClick={this.handleAddProduct}>\r\n                Dodaj produkt\r\n              </Button>\r\n              <Button\r\n                className=\"reset-products\"\r\n                onClick={this.props.handleReset}\r\n              >\r\n                Zresetuj koszyk\r\n              </Button>\r\n              <Button\r\n                className=\"add-product\"\r\n                onClick={this.props.handleCartTotal}\r\n              >\r\n                Przelicz wszystko <ReloadOutlined />\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n          <Col xs={24} md={8}>\r\n            <CartSum cartTotal={this.props.cartTotal} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = state => {\r\n  return {\r\n    products: state.shoppingCartReducer.products,\r\n    cart: state.shoppingCartReducer.cart,\r\n    cartTotal: state.shoppingCartReducer.cartTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addProduct: () => dispatch({ type: actionTypes.ADD_PRODUCT }),\r\n    changeAmount: (record, value) =>\r\n      dispatch({\r\n        type: actionTypes.CHANGE_AMOUNT_PRODUCT,\r\n        payload: { record: record, value: value }\r\n      }),\r\n    handleCartTotal: () => dispatch({ type: actionTypes.CART_TOTAL }),\r\n    deleteRow: record =>\r\n      dispatch({ type: actionTypes.REMOVE_PRODUCT, record: record }),\r\n    handleReset: () => dispatch({ type: actionTypes.CART_RESET })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCart);\r\n","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const CHANGE_AMOUNT_PRODUCT = \"CHANGE_AMOUNT_PRODUCT\";\r\nexport const CART_TOTAL = \"CART_TOTAL\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n\r\nexport const FORM_CHECKBOX = \"FORM_CHECKBOX\";\r\nexport const ON_SUBMIT_FORM = \"ON_SUBMIT_FORM\";\r\nexport const ADD_FORM_VALUES = \"ADD_FORM_VALUES\";\r\n\r\nexport const SET_DELIVERY_PAYMENT_VALUES = \"SET_DELIVERY_PAYMENT_VALUES\";\r\nexport const SET_POINT = \"SET_POINT\";\r\nexport const ORDER_TOTAL = \"ORDER_TOTAL\";\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Form, Input, Checkbox } from \"antd\";\r\nimport \"./AdressForm.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"./../../store/actionTypes\";\r\n\r\nconst InputGroup = Input.Group;\r\n\r\nclass AdressForm extends Component {\r\n  formRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.formRef.current.setFieldsValue(this.props.values);\r\n    const { addressForm } = this.props;\r\n    addressForm(this);\r\n  }\r\n\r\n  onSubmit = () => {\r\n      this.formRef.current.submit();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form\r\n          initialValues={this.props.values}\r\n          name=\"adressForm\"\r\n          onFinish={this.props.onFinish}\r\n          ref={this.formRef}\r\n        >\r\n          <Row>\r\n            <Col sx={24} md={12} className=\"custom-col\">\r\n              <Form.Item\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Imię jest wymagane.\"\r\n                  },\r\n                  {\r\n                    type: \"string\",\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Imię\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"lastName\"\r\n                rules={[\r\n                  { required: true, message: \"Nazwisko jest wymagane.\" },\r\n                  {\r\n                    type: \"string\",\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nazwisko\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"email\"\r\n                rules={[\r\n                  { required: true, message: \"E-mail jest wymagany.\" },\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"Niepoprawny format e-mail!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"E-mail\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"phone\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Numer telefonu jest wymagany.\"\r\n                  },\r\n                  {\r\n                    type: \"regexp\",\r\n                    pattern: new RegExp(/^[0-8]{8,12}$/g),\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input\r\n                  addonBefore=\"+48\"\r\n                  placeholder=\"Numer telefonu\"\r\n                  type=\"number\"\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"adress\"\r\n                rules={[{ required: true, message: \"Adres jest wymagany.\" }]}\r\n              >\r\n                <Input placeholder=\"Adres\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <InputGroup>\r\n                  <Row gutter={2} className=\"input-group-row\">\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"city\"\r\n                        rules={[\r\n                          { required: true, message: \"Miasto jest wymagane.\" }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Miasto\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"zip\"\r\n                        rules={[\r\n                          {\r\n                            required: true,\r\n                            message: \"Kod pocztowy jest wymagane.\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Kod pocztowy\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </InputGroup>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Checkbox\r\n                  type=\"checkbox\"\r\n                  name=\"invoiceNeeded\"\r\n                  checked={this.props.invoiceNeeded}\r\n                  onChange={this.props.handleCheckbox}\r\n                >\r\n                  Czy potrzebujesz faktury na firmę?\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col\r\n              sx={24}\r\n              md={12}\r\n              className={\r\n                this.props.invoiceNeeded ? \"visible custom-col\" : \"hidden\"\r\n              }\r\n            >\r\n              <Form.Item\r\n                name=\"companyName\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"Nazwa firmy jest wymagana.\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Nazwa firmy\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"NIP\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"NIP jest wymagane.\"\r\n                  },\r\n                  {\r\n                    type: \"regexp\",\r\n                    pattern: new RegExp(/^[0-9]{10}$/g),\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"NIP\" type=\"number\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"companyEmail\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"E-mail jest wymagany.\"\r\n                  },\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"Niepoprawny format e-mail!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"E-mail\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"companyPhone\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"Numer telefonu jest wymagany.\"\r\n                  },\r\n                  {\r\n                    type: \"regexp\",\r\n                    pattern: new RegExp(/^[0-8]{8,12}$/g),\r\n                    message: \"Niepoprawny format!\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input addonBefore=\"+48\" placeholder=\"Numer telefonu\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"companyAdress\"\r\n                rules={[\r\n                  {\r\n                    required: this.props.invoiceNeeded,\r\n                    message: \"Adres jest wymagany.\"\r\n                  }\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Adres Firmy\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <InputGroup>\r\n                  <Row gutter={2} className=\"input-group-row\">\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"companyCity\"\r\n                        rules={[\r\n                          {\r\n                            required: this.props.invoiceNeeded,\r\n                            message: \"Miasto jest wymagane.\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Miasto\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        name=\"companyZip\"\r\n                        rules={[\r\n                          {\r\n                            required: this.props.invoiceNeeded,\r\n                            message: \"Kod pocztowy jest wymagany.\"\r\n                          }\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Kod pocztowy\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Row>\r\n                </InputGroup>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = state => {\r\n  return {\r\n    invoiceNeeded: state.adressFormReducer.invoiceNeeded,\r\n    values: state.adressFormReducer.values\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    handleCheckbox: e =>\r\n      dispatch({ type: actionTypes.FORM_CHECKBOX, event: e }),\r\n    onFinish: values =>\r\n      dispatch({\r\n        type: actionTypes.ADD_FORM_VALUES,\r\n        values: values\r\n      })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdressForm);\r\n\r\n// onFinish = values => {\r\n//   console.log(values);\r\n//   this.setState({\r\n//     values: values\r\n//   });\r\n// };\r\n\r\n// handleCheckbox = e => {\r\n//   const checked = e.target.checked;\r\n//   this.setState({\r\n//     invoiceNeeded: checked\r\n//   });\r\n// };\r\n","import React, { Component } from \"react\";\r\nimport { Row, Col, Radio, Typography, Divider } from \"antd\";\r\nimport \"./DeliveryPayment.css\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actionTypes from \"./../../store/actionTypes\";\r\n\r\nconst { Text } = Typography;\r\n\r\nclass DeliveryPayment extends Component {\r\n  state = {\r\n    cost: \"14.99 zł\"\r\n  };\r\n\r\n  onChange = e => {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    if (target.value === 2) {\r\n      window.easyPack.mapWidget(\"easypack-map\", function(point) {\r\n        window.point = point;\r\n      });\r\n    }\r\n\r\n    this.props.setValues(name, value);\r\n    this.props.handleOrderTotal(this.props.cartTotal);\r\n    this.handleDeliveryCost(e);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.handleOrderTotal(this.props.cartTotal);\r\n\r\n    window.easyPackAsyncInit = function() {\r\n      window.easyPack.init({\r\n        points: {\r\n          types: [\"parcel_locker\"],\r\n          functions: [\"parcel_collect\"]\r\n        },\r\n        map: {\r\n          initialTypes: [\"parcel_locker\"]\r\n        }\r\n      });\r\n    };\r\n\r\n    if (this.props.deliveryValue === 2) {\r\n      window.easyPack.mapWidget(\"easypack-map\", function(point) {\r\n        window.point = point;\r\n      });\r\n    }\r\n  }\r\n\r\n  getPoint = point => {\r\n    if (window.point) {\r\n      const selectedPoint = window.point;\r\n      return this.props.setPoint(selectedPoint);\r\n    }\r\n  };\r\n\r\n  handleDeliveryCost = e => {\r\n    let cost = this.state.cost;\r\n    if (e.target.value === 0) {\r\n      cost = \"14.99 zł\";\r\n    } else if (e.target.value === 1) {\r\n      cost = \"9.99 zł\";\r\n    } else {\r\n      cost = \"8.99 zł\";\r\n    }\r\n    this.setState({\r\n      cost: cost\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"custom-row\">\r\n        <Col className=\"delivery-col\" xs={24} md={12}>\r\n          <Text className=\"custom-title\">Opcje dostawy:</Text>\r\n          <Radio.Group\r\n            name=\"deliveryValue\"\r\n            onChange={this.onChange}\r\n            value={this.props.deliveryValue}\r\n          >\r\n            <Radio className=\"custom-radio\" value={0}>\r\n              Kurier AtYourDoor <span className=\"price-style\">14.99 zł</span>\r\n            </Radio>\r\n            <Radio className=\"custom-radio\" value={1}>\r\n              Poczta Polska <span className=\"price-style\">9.99 zł</span>\r\n            </Radio>\r\n            <Radio className=\"custom-radio\" value={2}>\r\n              Paczkomaty <span className=\"price-style\">8.99 zł</span>\r\n            </Radio>\r\n          </Radio.Group>\r\n          {this.props.paczkomat && this.props.deliveryValue === 2 ? (\r\n            <div className=\"center-div\">\r\n              <Text className=\"custom-text\">\r\n                Wybrałeś paczkomat:{\" \"}\r\n                <span className=\"point\">{this.props.paczkomat}</span>\r\n              </Text>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"paczkomaty-map\" onClick={this.getPoint}>\r\n            {this.props.deliveryValue === 2 ? (\r\n              <div id=\"easypack-map\"></div>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n        <Col className=\"payment-col\" xs={24} md={12}>\r\n          <Text className=\"custom-title\">Opcje płatności:</Text>\r\n          <Radio.Group\r\n            name=\"paymentValue\"\r\n            onChange={this.onChange}\r\n            value={this.props.paymentValue}\r\n          >\r\n            <Radio className=\"custom-radio\" value={3}>\r\n              Płatność za pobraniem <span className=\"price-style\">9.99 zł</span>\r\n            </Radio>\r\n            <Radio className=\"custom-radio\" value={4}>\r\n              Płatność przelewem <span className=\"price-style\">0.00 zł</span>\r\n            </Radio>\r\n          </Radio.Group>\r\n          <div className=\"summary-div\">\r\n            <p>\r\n              Wartość koszyka: <strong>{this.props.cartTotal} zł</strong>\r\n            </p>\r\n            <p>\r\n              Koszt dostawy: <strong>{this.state.cost}</strong>\r\n            </p>\r\n            <p>\r\n              Koszt płatności:{\" \"}\r\n              <strong>\r\n                {this.props.paymentValue === 3 ? \"9.99 zł\" : \"0.00 zł\"}\r\n              </strong>\r\n            </p>\r\n            <Divider />\r\n            <Text className=\"custom-title total\">\r\n              Razem do zapłaty: <br />\r\n              <span className=\"price-style\">{this.props.orderTotal} zł</span>\r\n            </Text>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\n// REDUX\r\nconst mapStateToProps = state => {\r\n  return {\r\n    deliveryValue: state.deliveryPaymentReducer.deliveryValue,\r\n    paymentValue: state.deliveryPaymentReducer.paymentValue,\r\n    paczkomat: state.deliveryPaymentReducer.paczkomat,\r\n    cartTotal: state.shoppingCartReducer.cartTotal,\r\n    orderTotal: state.deliveryPaymentReducer.orderTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setValues: (name, value) =>\r\n      dispatch({\r\n        type: actionTypes.SET_DELIVERY_PAYMENT_VALUES,\r\n        payload: { name: name, value: value }\r\n      }),\r\n    setPoint: selectedPoint =>\r\n      dispatch({\r\n        type: actionTypes.SET_POINT,\r\n        selectedPoint: selectedPoint\r\n      }),\r\n    handleOrderTotal: cartTotal =>\r\n      dispatch({ type: actionTypes.ORDER_TOTAL, cartTotal: cartTotal })\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DeliveryPayment);\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"./store/actionTypes\";\nimport \"./App.css\";\nimport ShoppingCart from \"./components/ShoppingCart/ShoppingCart\";\nimport AdressForm from \"./components/AdressForm/AdressForm\";\nimport DeliveryPayment from \"./components/DeliveryPayment/DeliveryPayment\";\nimport { Steps, Button, Modal, message } from \"antd\";\nimport { ReloadOutlined, SmileOutlined } from \"@ant-design/icons\";\n\nconst { Step } = Steps;\n\nclass App extends Component {\n  state = {\n    current: 0,\n    visible: false\n  };\n\n  steps = [\n    {\n      title: \"Koszyk\",\n      content: <ShoppingCart />\n    },\n    {\n      title: \"Twoje dane\",\n      content: <AdressForm addressForm={ref => (this.child = ref)} />\n    },\n    {\n      title: \"Dostawa i płatność\",\n      content: <DeliveryPayment />\n    }\n  ];\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  handleOk = () => {\n    this.setState({ visible: false });\n  };\n  handleBack = () => {\n    this.setState({ current: 0, visible: false });\n    window.location.reload(false);\n  };\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  next() {\n    if (this.state.current === 0) {\n      if (!this.props.cart.length) {\n        return message.warning(\"Dodaj produkt!\");\n      } else {\n        this.props.handleCartTotal();\n        const current = this.state.current + 1;\n        this.setState({ current });\n      }\n    } else if (this.state.current === 1) {\n      this.child.formRef.current\n        .validateFields()\n        .then(values => {\n          this.props.onFinish(values);\n          const current = this.state.current + 1;\n          this.setState({ current });\n        })\n        .catch(errorInfo => {\n          return message.error(\"Wypełnij formularz!\");\n        });\n    } else {\n      const current = this.state.current + 1;\n      this.setState({ current });\n    }\n  }\n\n  prev() {\n    const current = this.state.current - 1;\n    this.setState({ current });\n  }\n\n  render() {\n    const current = this.state.current;\n    return (\n      <div className=\"form-container\">\n        <Steps className=\"ant-steps-label-vertical\" current={current}>\n          {this.steps.map(item => (\n            <Step key={item.title} title={item.title} />\n          ))}\n        </Steps>\n        <div className=\"steps-content\">{this.steps[current].content}</div>\n        <div className=\"steps-action\">\n          {current < this.steps.length - 1 && (\n            <Button\n              className=\"next-button\"\n              // disabled={!this.props.cart.length}\n              onClick={() => this.next()}\n            >\n              Dalej\n            </Button>\n          )}\n          {current === this.steps.length - 1 && (\n            <Button className=\"next-button\" onClick={this.showModal}>\n              Zamów i zapłać!\n            </Button>\n          )}\n          {current > 0 && (\n            <Button className=\"previous-button\" onClick={() => this.prev()}>\n              Powrót\n            </Button>\n          )}\n        </div>\n        <Modal\n          visible={this.state.visible}\n          title=\"Dziękujemy za zakupy!\"\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          footer={[\n            <Button\n              key=\"back\"\n              className=\"previous-button\"\n              onClick={this.handleBack}\n            >\n              Jeszcze raz! <ReloadOutlined />\n            </Button>,\n            <Button\n              key=\"submit\"\n              className=\"previous-button\"\n              onClick={this.handleOk}\n            >\n              Ok!\n            </Button>\n          ]}\n        >\n          <p>\n            Nie martw się! Kawa zaraz dotrze! <SmileOutlined />\n          </p>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cart: state.shoppingCartReducer.cart,\n    cartTotal: state.shoppingCartReducer.cartTotal\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleCartTotal: () => dispatch({ type: actionTypes.CART_TOTAL }),\n    onFinish: values =>\n      dispatch({\n        type: actionTypes.ADD_FORM_VALUES,\n        values: values\n      })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"./../actionTypes\";\r\nimport picture1 from \"../../images/baristaespresso.jpg\";\r\nimport picture2 from \"../../images/baristacaffecrema.jpg\";\r\nimport picture3 from \"../../images/privatkaffeeafricanblue.jpg\";\r\nimport picture4 from \"../../images/espressomilanostyle.jpg\";\r\nimport picture5 from \"../../images/espressosiciliastyle.jpg\";\r\n\r\nconst initialState = {\r\n  cart: [],\r\n  cartTotal: '0.00',\r\n  products: [\r\n    {\r\n      key: 0,\r\n      name: \"Barista Espresso 0,5kg\",\r\n      amount: 1,\r\n      price: 38.99,\r\n      totalPrice: 38.99,\r\n      picture: picture1\r\n    },\r\n    {\r\n      key: 1,\r\n      name: \"Barista Caffe Crema 0,5kg\",\r\n      amount: 1,\r\n      price: 40.99,\r\n      totalPrice: 40.99,\r\n      picture: picture2\r\n    },\r\n    {\r\n      key: 2,\r\n      name: \"Privat Kaffe African Blue 0,5kg\",\r\n      amount: 1,\r\n      price: 44.99,\r\n      totalPrice: 44.99,\r\n      picture: picture3\r\n    },\r\n    {\r\n      key: 3,\r\n      name: \"Espresso Milano Style 0,5kg\",\r\n      amount: 1,\r\n      price: 39.99,\r\n      totalPrice: 39.99,\r\n      picture: picture4\r\n    },\r\n    {\r\n      key: 4,\r\n      name: \"Espresso Sicilia Style 0,5kg\",\r\n      amount: 1,\r\n      price: 41.99,\r\n      totalPrice: 41.99,\r\n      picture: picture5\r\n    }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PRODUCT:\r\n      const index = Math.floor(Math.random() * state.products.length);\r\n      const product = state.products[index];\r\n      return {\r\n        ...state,\r\n        cart: state.cart.concat(product),\r\n        products: state.products.filter(p => p.key !== product.key)\r\n      };\r\n\r\n    case actionTypes.CHANGE_AMOUNT_PRODUCT:\r\n      const cart = [...state.cart];\r\n      cart.forEach(product => {\r\n        if (product.key === action.payload.record.key) {\r\n          product.amount = action.payload.value;\r\n          product.totalPrice = (product.amount * product.price).toFixed(2);\r\n          product.totalPrice = product.totalPrice * 1;\r\n        }\r\n      });\r\n      return {\r\n        ...state,\r\n        cart: cart \r\n      };\r\n\r\n    case actionTypes.CART_TOTAL:\r\n      let total = 0;\r\n      for (let i = 0; i < state.cart.length; i++) {\r\n        total += state.cart[i].totalPrice;\r\n      }\r\n      total = total.toFixed(2);\r\n      return {\r\n        ...state,\r\n        cartTotal: total\r\n      };\r\n\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      const removedProduct = state.cart.find(\r\n        product => product.key === action.record.key\r\n      );\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter(product => product.key !== removedProduct.key),\r\n        products: state.products.concat(removedProduct)\r\n      };\r\n\r\n    case actionTypes.CART_RESET:\r\n      return {\r\n        cart: [],\r\n        cartTotal: '0.00',\r\n        products: [\r\n          {\r\n            key: 0,\r\n            name: \"Barista Espresso 0,5kg\",\r\n            amount: 1,\r\n            price: 38.99,\r\n            totalPrice: 38.99,\r\n            picture: picture1\r\n          },\r\n          {\r\n            key: 1,\r\n            name: \"Barista Caffe Crema 0,5kg\",\r\n            amount: 1,\r\n            price: 40.99,\r\n            totalPrice: 40.99,\r\n            picture: picture2\r\n          },\r\n          {\r\n            key: 2,\r\n            name: \"Privat Kaffe African Blue 0,5kg\",\r\n            amount: 1,\r\n            price: 44.99,\r\n            totalPrice: 44.99,\r\n            picture: picture3\r\n          },\r\n          {\r\n            key: 3,\r\n            name: \"Espresso Milano Style 0,5kg\",\r\n            amount: 1,\r\n            price: 39.99,\r\n            totalPrice: 39.99,\r\n            picture: picture4\r\n          },\r\n          {\r\n            key: 4,\r\n            name: \"Espresso Sicilia Style 0,5kg\",\r\n            amount: 1,\r\n            price: 41.99,\r\n            totalPrice: 41.99,\r\n            picture: picture5\r\n          }\r\n        ]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./../actionTypes\";\r\n\r\nconst initialState = {\r\n  values: [\r\n    { name: \"\" },\r\n    { lastName: \"\" },\r\n    { email: \"\" },\r\n    { phone: 0 },\r\n    { adress: \"\" },\r\n    { city: \"\" },\r\n    { zip: \"\" },\r\n\r\n    { companyname: \"\" },\r\n    { NIP: \"\" },\r\n    { companyEmail: \"\" },\r\n    { companyPhone: 0 },\r\n    { companyAdress: \"\" },\r\n    { companyCity: \"\" },\r\n    { companyZip: \"\" }\r\n  ],\r\n  invoiceNeeded: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.FORM_CHECKBOX:\r\n      return {\r\n        ...state,\r\n        invoiceNeeded: action.event.target.checked\r\n      };\r\n    case actionTypes.ADD_FORM_VALUES:\r\n      return {\r\n        ...state,\r\n        values: action.values\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./../actionTypes\";\r\n\r\nconst initialState = {\r\n  deliveryValue: 0,\r\n  paymentValue: 3,\r\n  orderTotal: 0,\r\n  paczkomat: \"\"\r\n};\r\n\r\nconst prices = [\r\n  { id: 0, price: 14.99 },\r\n  { id: 1, price: 9.99 },\r\n  { id: 2, price: 8.99 },\r\n  { id: 3, price: 9.99 },\r\n  { id: 4, price: 0 }\r\n];\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_DELIVERY_PAYMENT_VALUES:\r\n      return {\r\n        ...state,\r\n        [action.payload.name]: action.payload.value\r\n      };\r\n\r\n    case actionTypes.SET_POINT:\r\n      return {\r\n        ...state,\r\n        paczkomat: action.selectedPoint.name\r\n      };\r\n\r\n    case actionTypes.ORDER_TOTAL:\r\n      const orderTotal =\r\n        action.cartTotal * 1 +\r\n        prices[state.deliveryValue].price +\r\n        prices[state.paymentValue].price;\r\n      return {\r\n        ...state,\r\n        orderTotal: orderTotal.toFixed(2)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport shoppingCartReducer from \"./store/reducers/shoppingCartReducer\";\nimport adressFormReducer from \"./store/reducers/adressFormReducer\";\nimport deliveryPaymentReducer from \"./store/reducers/deliveryPaymentReducer\";\n\nconst rootReducer = combineReducers({\n  shoppingCartReducer: shoppingCartReducer,\n  adressFormReducer: adressFormReducer,\n  deliveryPaymentReducer: deliveryPaymentReducer\n});\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}